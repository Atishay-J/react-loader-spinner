"use strict";(self.webpackChunkrls_docs=self.webpackChunkrls_docs||[]).push([[147],{5888:(e,r,t)=>{t.d(r,{oD:()=>o});const s=e=>({height:"Height of the "+e+" svg. For more customization use wrapper className ",width:"Width of the "+e+" svg. For more customization use wrapper className ",colors:"Colors of the "+e+" svg. Takes multiple colors object. If complete list of colors is not provided default will be used. Refer example.",color:"Color of the "+e+" svg",ariaLabel:"Aria label of the "+e+". Will be used for the aria-label attribute in the wrapper element",wrapperStyle:"Styles to be applied to the wrapper. It should be a valid CSS object. It can be used for custom styling. It will override the default style",wrapperClassName:"ClassName to be applied to the wrapper. It can be used for custom styling. It will override the default style",visible:"Whether the "+e+" is visible or not. If false, the "+e+" will not be rendered.",radius:"Radius of the circle(s) in "+e+" component. For more customization use wrapper className "}),i={height:"number | string",width:"number | string",colors:"Array<string>",color:"string: #hex-code",secondaryColor:"string: #hex-code",ariaLabel:"string",wrapperStyle:"object",wrapperClassName:"string",visible:"boolean",radius:"number | string",strokeWidth:"number | string",strokeColor:"string"},a=e=>({height:"80",width:"80",color:"#4fa94d",secondaryColor:"#4fa94d",ariaLabel:e+"-loading",wrapperStyle:JSON.stringify({},null,2),wrapperClassName:"undefined",visible:"true"}),o=function(e,r){return void 0===r&&(r=[]),[{name:"height",type:i.height,default:a(e).height,description:s(e).height},{name:"width",type:i.width,default:a(e).width,description:s(e).width},{name:"colors",type:i.colors,default:JSON.stringify(["#4fa94d","#4fa94d","#4fa94d"]),description:s(e).colors},{name:"ariaLabel",type:i.ariaLabel,default:a(e).ariaLabel,description:s(e).ariaLabel},{name:"wrapperStyle",type:i.wrapperStyle,default:a(e).wrapperStyle,description:s(e).wrapperStyle},{name:"wrapperClassName",type:i.wrapperClassName,default:a(e).wrapperClassName,description:s(e).wrapperClassName},{name:"visible",type:i.visible,default:a(e).visible,description:s(e).visible}].filter((e=>!r.includes(e.name)))}},3312:(e,r,t)=>{t.r(r),t.d(r,{assets:()=>c,contentTitle:()=>n,default:()=>u,frontMatter:()=>l,metadata:()=>p,toc:()=>d});var s=t(7462),i=(t(7294),t(3905)),a=t(2052),o=t(5888);const l={},n="Circles",p={unversionedId:"components/circles",id:"components/circles",title:"Circles",description:"Props",source:"@site/docs/components/circles.mdx",sourceDirName:"components",slug:"/components/circles",permalink:"/react-loader-spinner/docs/components/circles",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Circles With Bar",permalink:"/react-loader-spinner/docs/components/circles-with-bar"},next:{title:"Color Ring",permalink:"/react-loader-spinner/docs/components/color-ring"}},c={},d=[{value:"Props",id:"props",level:3}],m={toc:d};function u(e){let{components:r,...t}=e;return(0,i.kt)("wrapper",(0,s.Z)({},m,t,{components:r,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"circles"},"Circles"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-jsx",metastring:"live",live:!0},'<Circles\n  height="80"\n  width="80"\n  color="#4fa94d"\n  ariaLabel="circles-loading"\n  wrapperStyle={{}}\n  wrapperClass=""\n  visible={true}\n/>\n')),(0,i.kt)("h3",{id:"props"},"Props"),(0,i.kt)(a.Z,{properties:[...(0,o.oD)("circles",["colors"])],mdxType:"PropsTable"}))}u.isMDXComponent=!0}}]);